{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bfa1d5df_5dd7e394",
        "filename": "include/libbej/bej_tree.h",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2023-02-03T02:29:44Z",
      "side": 1,
      "message": "minor nit: (drop more)",
      "range": {
        "startLine": 81,
        "startChar": 20,
        "endLine": 81,
        "endChar": 24
      },
      "revId": "af8d2d0ceea5ee18a5132a5f7e1a28e8bf209161",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "565bbc6d_e5637af6",
        "filename": "include/libbej/bej_tree.h",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2023-02-03T02:29:44Z",
      "side": 1,
      "message": "I think the wording of this is a little funny - what I think you mean to convey here is why we have firstChild pointer and the lastChild pointer as well? With the reasoning that if only had the firstChild pointer, we would only be able to push_front vs. push_back - where push_back means we can give the \"first\" element first. FIFO vs. LIFO",
      "range": {
        "startLine": 77,
        "startChar": 37,
        "endLine": 83,
        "endChar": 56
      },
      "revId": "af8d2d0ceea5ee18a5132a5f7e1a28e8bf209161",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}